{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://bioexcel.eu/biobb_ml/json_schemas/1.0/oversampling",
    "name": "biobb_ml Oversampling",
    "title": "Wrapper of most of the imblearn.over_sampling methods.",
    "description": "Involves supplementing the training data with multiple copies of some of the minority classes of a given dataset. If regression is specified as type, the data will be resampled to classes in order to apply the oversampling model. Visit the imbalanced-learn official website for the different methods accepted in this wrapper: RandomOverSampler, SMOTE, BorderlineSMOTE, SVMSMOTE, ADASYN",
    "type": "object",
    "info": {
        "wrapped_software": {
            "name": "imbalanced-learn over_sampling",
            "version": ">0.7.0",
            "license": "MIT"
        },
        "ontology": {
            "name": "EDAM",
            "schema": "http://edamontology.org/EDAM.owl"
        }
    },
    "required": [
        "input_dataset_path",
        "output_dataset_path"
    ],
    "properties": {
        "input_dataset_path": {
            "type": "string",
            "description": "Path to the input dataset",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_ml/raw/master/biobb_ml/test/data/resampling/dataset_resampling.csv",
            "enum": [
                ".*\\.csv$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.csv$",
                    "description": "Path to the input dataset",
                    "edam": "format_3752"
                }
            ]
        },
        "output_dataset_path": {
            "type": "string",
            "description": "Path to the output dataset",
            "filetype": "output",
            "sample": "https://github.com/bioexcel/biobb_ml/raw/master/biobb_ml/test/reference/resampling/ref_output_oversampling.csv",
            "enum": [
                ".*\\.csv$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.csv$",
                    "description": "Path to the output dataset",
                    "edam": "format_3752"
                }
            ]
        },
        "properties": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Oversampling method. It's a mandatory property. ",
                    "enum": [
                        "random",
                        "smote",
                        "borderline",
                        "svmsmote",
                        "adasyn"
                    ],
                    "property_formats": [
                        {
                            "name": "random",
                            "description": "RandomOverSampler: Object to over-sample the minority classes by picking samples at random with replacement"
                        },
                        {
                            "name": "smote",
                            "description": "SMOTE: This object is an implementation of SMOTE - Synthetic Minority Over-sampling Technique"
                        },
                        {
                            "name": "borderline",
                            "description": "BorderlineSMOTE: This algorithm is a variant of the original SMOTE algorithm. Borderline samples will be detected and used to generate new synthetic samples"
                        },
                        {
                            "name": "svmsmote",
                            "description": "SVMSMOTE: Variant of SMOTE algorithm which use an SVM algorithm to detect sample to use for generating new synthetic samples"
                        },
                        {
                            "name": "adasyn",
                            "description": "ADASYN: Perform over-sampling using Adaptive Synthetic -ADASYN- sampling approach for imbalanced datasets"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Type of oversampling. It's a mandatory property. ",
                    "enum": [
                        "regression",
                        "classification"
                    ],
                    "property_formats": [
                        {
                            "name": "regression",
                            "description": "the oversampling will be applied on a continuous dataset"
                        },
                        {
                            "name": "classification",
                            "description": "the oversampling will be applied on a classified dataset"
                        }
                    ]
                },
                "target": {
                    "type": "object",
                    "default": {},
                    "wf_prop": false,
                    "description": "Dependent variable you want to predict from your dataset. You can specify either a column name or a column index. Formats: { \"column\": \"column3\" } or { \"index\": 21 }. In case of mulitple formats, the first one will be picked."
                },
                "evaluate": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": false,
                    "description": "Whether or not to evaluate the dataset before and after applying the resampling."
                },
                "evaluate_splits": {
                    "type": "integer",
                    "default": 3,
                    "wf_prop": false,
                    "description": "Number of folds to be applied by the Repeated Stratified K-Fold evaluation method. Must be at least 2.",
                    "min": 2,
                    "max": 100,
                    "step": 1
                },
                "evaluate_repeats": {
                    "type": "integer",
                    "default": 3,
                    "wf_prop": false,
                    "description": "Number of times Repeated Stratified K-Fold cross validator needs to be repeated.",
                    "min": 2,
                    "max": 100,
                    "step": 1
                },
                "n_bins": {
                    "type": "integer",
                    "default": 5,
                    "wf_prop": false,
                    "description": "Only for regression oversampling. The number of classes that the user wants to generate with the target data.",
                    "min": 1,
                    "max": 100,
                    "step": 1
                },
                "balanced_binning": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": false,
                    "description": "Only for regression oversampling. Decides whether samples are to be distributed roughly equally across all classes."
                },
                "sampling_strategy": {
                    "type": "object",
                    "default": {
                        "target": "auto"
                    },
                    "wf_prop": false,
                    "description": "Sampling information to sample the data set. Formats: { \"target\": \"auto\" }, { \"ratio\": 0.3 }, { \"dict\": { 0: 300, 1: 200, 2: 100 } } or { \"list\": [0, 2, 3] }. When \"target\", specify the class targeted by the resampling; the number of samples in the different classes will be equalized; possible choices are: minority (resample only the minority class), not minority (resample all classes but the minority class), not majority (resample all classes but the majority class), all (resample all classes), auto (equivalent to 'not majority'). When \"ratio\", it corresponds to the desired ratio of the number of samples in the minority class over the number of samples in the majority class after resampling (ONLY IN CASE OF BINARY CLASSIFICATION).  When \"dict\", the keys correspond to the targeted classes, the values correspond to the desired number of samples for each targeted class. When \"list\", the list contains the classes targeted by the resampling."
                },
                "k_neighbors": {
                    "type": "integer",
                    "default": 5,
                    "wf_prop": false,
                    "description": "Only for SMOTE, BorderlineSMOTE, SVMSMOTE, ADASYN. The number of nearest neighbours used to construct synthetic samples.",
                    "min": 1,
                    "max": 100,
                    "step": 1
                },
                "random_state_method": {
                    "type": "integer",
                    "default": 5,
                    "wf_prop": false,
                    "description": "Controls the randomization of the algorithm.",
                    "min": 1,
                    "max": 1000,
                    "step": 1
                },
                "random_state_evaluate": {
                    "type": "integer",
                    "default": 5,
                    "wf_prop": false,
                    "description": "Controls the shuffling applied to the Repeated Stratified K-Fold evaluation method.",
                    "min": 1,
                    "max": 1000,
                    "step": 1
                },
                "remove_tmp": {
                    "type": "boolean",
                    "default": true,
                    "wf_prop": true,
                    "description": "Remove temporal files."
                },
                "restart": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": true,
                    "description": "Do not execute if output files exist."
                }
            }
        }
    },
    "additionalProperties": false
}